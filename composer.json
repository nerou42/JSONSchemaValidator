{
    "name": "nerou/json-schema-validator",
    "version": "1.0.3",
    "type": "library",
    "license": "MIT",
    "authors": [
        {
            "name": "Andreas Wahlen",
            "email": "andreas.wahlen@nerou.de",
            "role": "Developer",
            "homepage": "https://www.nerou.de"
        }
    ],
    "require": {
        "php": ">=8.0",
        "ext-json": "*",
        "opis/json-schema": "^2.3",
        "nerou/cli-parser": "^0.1.0"
    },
    "require-dev": {
        "squizlabs/php_codesniffer": ">=3.7"
    },
    "prefer-stable": true,
    "autoload": {
        "files": [
            "src/functions.php"
        ]
    },
    "bin": [
        "bin/json-schema-validator"
    ],
    "scripts": {
        "phpcs": "./vendor/bin/phpcs",
        "phpcbf": "./vendor/bin/phpcbf",
        "phpunit": "./tools/phpunit test",
        "phpcpd": "./tools/phpcpd src",
        "psalm": "./tools/psalm --no-diff --use-baseline=psalm.baseline.xml --php-version=8.1",
        "psalm-stats": "./tools/psalm --no-diff --use-baseline=psalm.baseline.xml --php-version=8.1 --stats | grep -v 100",
        "update-psalm-baseline": "./tools/psalm --no-diff --set-baseline=psalm.baseline.xml",
        "require-checker": "./tools/composer-require-checker check",
        "lines": "./tools/phploc src",
        "build": "./vendor/bin/box compile",
        "tests": [
            "@phpcs",
            "@phpunit",
            "@phpcpd",
            "@psalm"
        ]
    },
    "scripts-descriptions": {
        "phpcs": "Runs CodeSniffer for coding style tests.", 
        "phpcbf": "Fixes marked violations found by phpcs/CodeSniffer.",
        "phpunit": "Runs unit/integration tests.",
        "phpcpd": "Runs copied code finder.",
        "psalm": "Runs static analysis.",
        "psalm-stats": "Print files with unsafe types based on psalm.",
        "update-psalm-baseline": "Updates baseline for psalm. CAUTION should not be run as a regular procedure!",
        "lines": "Gathers statistics about lines of code.",
        "build": "Build PHAR",
        "tests": "Runs all available tests."
    }
}
